worker_processes                   auto;
worker_rlimit_nofile               40000;

events {
    worker_connections             8192;
}

http {
    server_tokens                   off;

    add_header                      X-Frame-Options SAMEORIGIN;
    add_header                      X-Content-Type-Options nosniff;
    add_header                      X-XSS-Protection "1; mode=block";

    default_type                    application/octet-stream;

    log_format                      main  '$remote_addr - $remote_user [$time_local]  $status '
                                          '"$request" $body_bytes_sent "$http_referer" '
                                          '"$http_user_agent" "$http_x_forwarded_for"';

    access_log                      /var/log/nginx/access.log main;

    sendfile                        on;
    tcp_nopush                      on;

    server {
        listen                      80 default_server;
        listen                      [::]:80 default_server;
        server_name                 _;
        return 301                  https://$host$request_uri;
    }

    upstream gitlab_server {
        server 1.1.1.1:2443 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 443                 ssl http2;

        server_name                gitlab.org.com;

        ssl_certificate            /etc/nginx/certs/gitlab.org.com.crt;
        ssl_certificate_key        /etc/nginx/certs/gitlab.org.com.key;
        ssl_password_file          /etc/nginx/certs/pass;
        
        location / {
            proxy_pass              https://gitlab_server;
            include                 /etc/nginx/proxy.headers.conf;

        }
    }

    upstream registry_server {
        server 1.1.1.1:5000 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 443                 ssl http2;

        server_name                registry.org.com;

        ssl_certificate            /etc/nginx/certs/registry.org.com.crt;
        ssl_certificate_key        /etc/nginx/certs/registry.org.com.key;
        ssl_password_file          /etc/nginx/certs/pass;
        
        location / {
            proxy_pass              https://registry_server;
            include                 /etc/nginx/proxy.headers.conf;

        }
    }

    upstream sentry_server {
        server 1.1.1.1:9000 max_fails=3 fail_timeout=10s;
    }

    server {
        listen 443                 ssl http2;

        server_name                sentry.org.com;

        ssl_certificate            /etc/nginx/certs/sentry.org.com.crt;
        ssl_certificate_key        /etc/nginx/certs/sentry.org.com.key;
        ssl_password_file          /etc/nginx/certs/pass;
        
        location / {
            proxy_pass              http://sentry_server;
            include                 /etc/nginx/proxy.headers.conf;
        }
    }
}
